package at.fabricate.liftdev.common
package model

import net.liftweb.mapper.IdPK
import net.liftweb.mapper.MappedString
import net.liftweb.mapper.MappedStringIndex
import net.liftweb.mapper.KeyedMetaMapper
import net.liftweb.mapper.KeyedMapper
import net.liftweb.mapper.BaseKeyedMapper
import net.liftweb.mapper.IndexedField
import net.liftweb.mapper.MappedField
import net.liftweb.mapper._
import net.liftweb._
import net.liftweb.util._
import net.liftweb.common._


trait GeneralLanguageMeta[ModelType <: GeneralLanguage[ModelType] with KeyedMapper[String,ModelType] ] extends KeyedMetaMapper[String,ModelType] {
	self: ModelType  => 
//  with KeyedMapper[U, ModelType]
    
//	override type KeyedMapperType = ModelType
//	override type TheKeyType = U
//	override type KeyedMapperType = KeyedMapper[U,ModelType]
}
  

trait GeneralLanguage[T <: GeneralLanguage[T] with KeyedMapper[String,T]] extends KeyedMapper[String,T] with EnsureUniqueTextFields[T] with BaseKeyedMapper {
  	//self: KeyedMapper[String,T] =>
//  : MappedField[String,T] with IndexedField[String] 
//  with MetaMapper[A] with KeyedMapper[Type, A]
	self: T =>
//	override type KeyedMapperType = T
//	override type TheKeyType = U
//	override type KeyedMapperType = KeyedMapper[U,T]
	
//	type TheMappingField = MappedField[String,T] with IndexedField[String]
	
//    override 
	// keeps making troubles
    override def primaryKeyField = this.langCode
//     : MappedField[String,T] with IndexedField[String]
//    : MappedField[String,T] with IndexedField[String] 
//    .asInstanceOf[MappedField[U,T] with IndexedField[U]]
  	  
    object langCode extends MappedStringIndex(this, 6)  { //}  with IndexedField[String]{	      
	    override def writePermission_? = true   // if u want to set it via your code, keep this true
	    override def dbAutogenerated_? = false
	    override def dbNotNull_? = true
//    override def dbColumnName="str_cd"
    }
    object languageNameInEnglish extends MappedString(this, 500 )
    object languageNameInTheLanguage extends MappedString(this, 500 )
    object languageNameInternational extends MappedString(this, 500 )

	override def theUniqueFields = List(langCode,languageNameInEnglish)
//      self.langCode.asInstanceOf[MappedField[String,T] with IndexedField[String]]
}
